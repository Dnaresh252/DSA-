#include<bits/stdc++.h>
using namespace std;
class Node
{
    public:
    int data;
    Node* next;
    public:
    Node(int data1,Node* next1)
    {
        data=data1;
        next=next1;
      
    }
    public:
    Node(int data1)
    {
        data=data1;
        next=nullptr;
    }
};
//brutte code
bool checkloop(Node* head)
{
    Node* temp=head;
    map<Node*,int>l;
    while(temp!=NULL)
    {
        if(l.find(temp)!=l.end())
        {
            return true;
        }
        l[temp]=1;
        temp=temp->next;
    }
    return false;
}

//optimise code and tortise algorithm;
bool checkloop2(Node* head)
{
    Node* slow=head;
    Node* fast=head;
    while(fast!=NULL and fast->next!=NULL)
    {
        slow=slow->next;
         fast=fast->next->next;
         if(slow==fast)
         {
            return true;
         }
    }
    return false;
}
int main()
{
   //simple ll;
    Node* head = new Node(1);
    Node* second = new Node(2);
    Node* third = new Node(3);
    Node* fourth = new Node(4);
    Node* fifth = new Node(5);

    head->next = second;
    second->next = third;
    third->next = fourth;
    fourth->next = fifth;
     // Create a loop;
    fifth->next = third; 

   if(checkloop2(head))
   {
    cout<<"true";
}
else{
    cout<<"FAlse";
}

  
    
       
    
}
